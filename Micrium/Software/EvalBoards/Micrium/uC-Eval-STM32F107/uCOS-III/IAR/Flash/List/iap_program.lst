###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       04/Dec/2017  18:40:45
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAP_pragram\iap_program.c
#    Command line =  
#        "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAP_pragram\iap_program.c"
#        -D USE_STDPERIPH_DRIVER -lCN
#        "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\Flash\List"
#        -o "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\Flash\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\arm\INC\c\DLib_Config_Full.h"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\uCOS-III\IAR\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\crccheck\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\csnrprotocol\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\IAP_pragram\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\usart\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\ST\STM32\inc\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\CMSIS\CM3\CoreSupport\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\Flash\List\iap_program.lst
#    Object file  =  
#        F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III -
#        副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III\IAR\Flash\Obj\iap_program.o
#
###############################################################################

F:\iar\Micrium_uC-Eval-STM32F107_uCOS-III - 副本\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAP_pragram\iap_program.c
      1          #include <includes.h>
      2          #include "string.h"
      3          #include    "csnr_package_deal.h"
      4          
      5          
      6          #define	USER_APP_START_ADDR		(STM32_FLASH_BASE + 0x00010000	)
      7          #define	USER_APP_PRO_SIZE		0x0000FFFF	
      8          
      9          #define	USER_BACK_START_ADDR	(STM32_FLASH_BASE + 0x00020000	)
     10          
     11          #define IAP_WRITE_1024          1024
     12          #define	IAP_PARA_START_ADDR     (STM32_FLASH_BASE + 0x00030000)
     13          #define	IAP_PARA_PRO_SIZE		0x0000FFFF	
     14          
     15           
     16          
     17          ////////////////////////////////////////////
     18          extern  void iap_write_appbin(u32 appxaddr,u8 *appbuf,u32 appsize);
     19          
     20          int  GetSysBaseTick(void);
     21          

   \                                 In section .text, align 2, keep-with-next
     22          uint32  GetSysTime(void)
     23          {
   \                     GetSysTime: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     24              uint32    tmp64;
     25              tmp64 = GetSysBaseTick();
   \   00000002   0x.... 0x....      BL       GetSysBaseTick
   \   00000006   0x0004             MOVS     R4,R0
     26              
     27              return     (tmp64);      
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
     28          }
     29          
     30          

   \                                 In section .text, align 2, keep-with-next
     31          void    FeedDog(void)
     32          {
   \                     FeedDog: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     33              IWDG_ReloadCounter();
   \   00000002   0x.... 0x....      BL       IWDG_ReloadCounter
     34          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     35          
     36          //void   DelayX10ms(u32   delay)
     37          //{
     38          ////    uint32  i= 1000000;
     39          ////    while(i--);
     40          //      return;
     41          //}
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void	DelayX10ms(uint32	Time)
     44          {
   \                     DelayX10ms: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     45          	uint32	i,SysTime;
     46          	for(i=0;i<Time;i++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0005             MOVS     R5,R0
   \                     ??DelayX10ms_0: (+1)
   \   00000008   0x42A5             CMP      R5,R4
   \   0000000A   0xD20C             BCS.N    ??DelayX10ms_1
     47          	{
     48          		SysTime = GetSysTime();
   \   0000000C   0x.... 0x....      BL       GetSysTime
   \   00000010   0x0006             MOVS     R6,R0
     49          		
     50          		while(GetSysTime()-SysTime == 0)
   \                     ??DelayX10ms_2: (+1)
   \   00000012   0x.... 0x....      BL       GetSysTime
   \   00000016   0x1B80             SUBS     R0,R0,R6
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD102             BNE.N    ??DelayX10ms_3
     51          		{
     52          			FeedDog();
   \   0000001C   0x.... 0x....      BL       FeedDog
   \   00000020   0xE7F7             B.N      ??DelayX10ms_2
     53          		}		
     54          	}
   \                     ??DelayX10ms_3: (+1)
   \   00000022   0x1C6D             ADDS     R5,R5,#+1
   \   00000024   0xE7F0             B.N      ??DelayX10ms_0
     55          }
   \                     ??DelayX10ms_1: (+1)
   \   00000026   0xBD70             POP      {R4-R6,PC}       ;; return
     56          
     57          #define zyIrqDisable()  CPU_INT_DIS()
     58          #define zyIrqEnable()   CPU_INT_EN()
     59          
     60          
     61          //对flash 进行擦写
     62          //默认进入长度len=128
     63          #define		MAX_SEC_NUM   22

   \                                 In section .text, align 2, keep-with-next
     64          void	IAP_pragramDeal(uint8	*buf,uint32	len)
     65          {
   \                     IAP_pragramDeal: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     66          	static	uint32	curaddr = USER_APP_START_ADDR;
     67          	static	uint8	iapbuf[2048];
     68          	static	uint32	iapbuflen = 0;
     69          	static	uint8   times = 0;
     70              
     71              CPU_SR_ALLOC();
   \   00000006   0x2600             MOVS     R6,#+0
     72              times++;
   \   00000008   0x....             LDR.N    R0,??DataTable4_2
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable4_2
   \   00000010   0x7008             STRB     R0,[R1, #+0]
     73              memcpy(&iapbuf[iapbuflen],buf,len);     //
   \   00000012   0x....             LDR.N    R0,??DataTable4_3
   \   00000014   0x....             LDR.N    R1,??DataTable4_4
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x180F             ADDS     R7,R1,R0
   \   0000001A   0x002A             MOVS     R2,R5
   \   0000001C   0x0021             MOVS     R1,R4
   \   0000001E   0x0038             MOVS     R0,R7
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy
     74              
     75              iapbuflen +=len;
   \   00000024   0x....             LDR.N    R0,??DataTable4_4
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x1828             ADDS     R0,R5,R0
   \   0000002A   0x....             LDR.N    R1,??DataTable4_4
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     76          	   
     77              if(times == 1024/128 || len != 128)
   \   0000002E   0x....             LDR.N    R0,??DataTable4_2
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2808             CMP      R0,#+8
   \   00000034   0xD001             BEQ.N    ??IAP_pragramDeal_0
   \   00000036   0x2D80             CMP      R5,#+128
   \   00000038   0xD024             BEQ.N    ??IAP_pragramDeal_1
     78              {
     79                  if(len != 128)
   \                     ??IAP_pragramDeal_0: (+1)
   \   0000003A   0x2D80             CMP      R5,#+128
   \   0000003C   0xD009             BEQ.N    ??IAP_pragramDeal_2
     80                  {
     81                      for(u32 i = iapbuflen;i<1024;i++ )
   \   0000003E   0x....             LDR.N    R0,??DataTable4_4
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \                     ??IAP_pragramDeal_3: (+1)
   \   00000042   0xF5B0 0x6F80      CMP      R0,#+1024
   \   00000046   0xD204             BCS.N    ??IAP_pragramDeal_2
     82                          iapbuf[i] = 0xff;	
   \   00000048   0x21FF             MOVS     R1,#+255
   \   0000004A   0x....             LDR.N    R2,??DataTable4_3
   \   0000004C   0x5481             STRB     R1,[R0, R2]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0xE7F7             B.N      ??IAP_pragramDeal_3
     83                  }
     84          
     85          
     86                  zyIrqDisable();										//关中断
   \                     ??IAP_pragramDeal_2: (+1)
   \   00000052   0x.... 0x....      BL       CPU_SR_Save
   \   00000056   0x0006             MOVS     R6,R0
     87                  
     88          
     89                  iap_write_appbin(curaddr,iapbuf,1024);
   \   00000058   0xF44F 0x6280      MOV      R2,#+1024
   \   0000005C   0x....             LDR.N    R1,??DataTable4_3
   \   0000005E   0x....             LDR.N    R0,??DataTable4_5
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x.... 0x....      BL       iap_write_appbin
     90          
     91                  zyIrqEnable();
   \   00000066   0x0030             MOVS     R0,R6
   \   00000068   0x.... 0x....      BL       CPU_SR_Restore
     92                  
     93                  curaddr += 1024;
   \   0000006C   0x....             LDR.N    R0,??DataTable4_5
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF510 0x6080      ADDS     R0,R0,#+1024
   \   00000074   0x....             LDR.N    R1,??DataTable4_5
   \   00000076   0x6008             STR      R0,[R1, #+0]
     94                  times = 0;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x....             LDR.N    R1,??DataTable4_2
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
     95                  iapbuflen = 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x....             LDR.N    R1,??DataTable4_4
   \   00000082   0x6008             STR      R0,[R1, #+0]
     96              }
     97          		//DelayX10ms(2);	
     98          }
   \                     ??IAP_pragramDeal_1: (+1)
   \   00000084   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .data, align 4
   \                     ??curaddr:
   \   00000000   0x08010000         DC32 134283264

   \                                 In section .bss, align 4
   \                     ??iapbuf:
   \   00000000                      DS8 2048

   \                                 In section .bss, align 4
   \                     ??iapbuflen:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??times:
   \   00000000                      DS8 1
     99          

   \                                 In section .text, align 2, keep-with-next
    100          void iwdg_init(void){
   \                     iwdg_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    101              IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);//??IWDG_PR?IWDG_RLR????
   \   00000002   0xF245 0x5055      MOVW     R0,#+21845
   \   00000006   0x.... 0x....      BL       IWDG_WriteAccessCmd
    102              IWDG_SetReload(0xfff);//???????0xfff
   \   0000000A   0xF640 0x70FF      MOVW     R0,#+4095
   \   0000000E   0x.... 0x....      BL       IWDG_SetReload
    103              IWDG_SetPrescaler(IWDG_Prescaler_64);//????????32   
   \   00000012   0x2004             MOVS     R0,#+4
   \   00000014   0x.... 0x....      BL       IWDG_SetPrescaler
    104              IWDG_Enable();//?????
   \   00000018   0x.... 0x....      BL       IWDG_Enable
    105          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
    106          
    107          
    108          void	DataSend_CSNR(unsigned char SourceAddr,unsigned char DistAddr,unsigned char	*DataBuf,unsigned int	DataLen);
    109          extern	unsigned char  CSNR_GetData(unsigned char	*RecBuf,unsigned char RecLen,unsigned char	*DataBuf,unsigned char	*InfoLen) ;
    110          void    IAP_ProgramCopy(void);
    111          void printfcom1(const char *format, ...);
    112          void    HoldUartRecSta(void);                                        //维护串口状态
    113          u32 ReadUartBuf(u8 *buf,u32 len);        //从串口缓存区读数据
    114          extern  uint8	GetRecFramNum(void);
    115          extern  void	SetFramNum(uint8 num);
    116          extern  uint8	GetFramNum(void);
    117          extern  void Jumpto_APP(void);
    118          

   \                                 In section .data, align 4
    119          char    startstring[]={"IAP_pragram start!"};
   \                     startstring:
   \   00000000   0x49 0x41          DC8 "IAP_pragram start!"
   \              0x50 0x5F    
   \              0x70 0x72    
   \              0x61 0x67    
   \              0x72 0x61    
   \              0x6D 0x20    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x21    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .data, align 2
    120          char    pramstring[]={"."};
   \                     pramstring:
   \   00000000   0x2E 0x00          DC8 "."

   \                                 In section .data, align 2
    121          char    holdstring[]={"!"};
   \                     holdstring:
   \   00000000   0x21 0x00          DC8 "!"

   \                                 In section .data, align 4
    122          char    endstring[]={"IAP_pragram end!"};
   \                     endstring:
   \   00000000   0x49 0x41          DC8 "IAP_pragram end!"
   \              0x50 0x5F    
   \              0x70 0x72    
   \              0x61 0x67    
   \              0x72 0x61    
   \              0x6D 0x20    
   \              0x65 0x6E    
   \              0x64 0x21    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    123          

   \                                 In section .bss, align 4
    124          uint8		recbuf[256];
   \                     recbuf:
   \   00000000                      DS8 256

   \                                 In section .bss, align 4
    125          uint8		databuf[256];
   \                     databuf:
   \   00000000                      DS8 256
    126          

   \                                 In section .text, align 2, keep-with-next
    127          void	IAP_PragramTask(void)
    128          {
   \                     IAP_PragramTask: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    129          		static	    uint32  	time = 0;
    130          		static	    uint8		praflg = 0;
    131                  static     uint8       comflg = 0; 
    132          		
    133          
    134          //		uint32		reclen 	= 0;	
    135          		uint32		datalen = 0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x9000             STR      R0,[SP, #+0]
    136                  
    137          		uint32		tmp;
    138          
    139          //		char		*p;
    140          //		uint32		i;
    141          		static		uint8	lstrecnum = 0;
    142                  
    143                  //while(1)
    144                  printfcom1("\r\n");
   \   00000008   0x....             ADR.N    R0,??DataTable4  ;; 0x0D, 0x0A, 0x00, 0x00
   \   0000000A   0x.... 0x....      BL       printfcom1
    145                  printfcom1("\r\nboot start stm32 V1.01");
   \   0000000E   0x....             LDR.N    R0,??DataTable4_6
   \   00000010   0x.... 0x....      BL       printfcom1
    146          
    147          		time = GetSysTime();
   \   00000014   0x.... 0x....      BL       GetSysTime
   \   00000018   0x....             LDR.N    R1,??DataTable4_7
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    148                  iwdg_init();
   \   0000001C   0x.... 0x....      BL       iwdg_init
    149          
    150          		while(1)
    151          		{
    152                      DelayX10ms(1);
   \                     ??IAP_PragramTask_0: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       DelayX10ms
    153          
    154                      HoldUartRecSta();
   \   00000026   0x.... 0x....      BL       HoldUartRecSta
    155                      
    156                      tmp = ReadUartBuf(recbuf,sizeof(recbuf));   //è?′??úêy?Y
   \   0000002A   0xF44F 0x7180      MOV      R1,#+256
   \   0000002E   0x....             LDR.N    R0,??DataTable4_8
   \   00000030   0x.... 0x....      BL       ReadUartBuf
   \   00000034   0x0004             MOVS     R4,R0
    157          
    158                      //if(GetFramRecEndFlgIAP())
    159                      if(tmp > 10 )
   \   00000036   0x2C0B             CMP      R4,#+11
   \   00000038   0xF0C0 0x8082      BCC.W    ??IAP_PragramTask_1
    160                      {
    161          //                tmp = ReadRs485DataIAP(recbuf);
    162          //                ClearFramRecEndFlgIAP();
    163                          if(tmp == 0)
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD0EF             BEQ.N    ??IAP_PragramTask_0
    164                              continue ;
    165                  
    166                          comflg = 1;
   \                     ??IAP_PragramTask_2: (+1)
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x....             LDR.N    R1,??DataTable4_9
   \   00000044   0x7008             STRB     R0,[R1, #+0]
    167                          CSNR_GetData(recbuf,tmp,databuf,(uint8 *)&datalen); 
   \   00000046   0x466B             MOV      R3,SP
   \   00000048   0x....             LDR.N    R2,??DataTable4_10
   \   0000004A   0x0021             MOVS     R1,R4
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x....             LDR.N    R0,??DataTable4_8
   \   00000050   0x.... 0x....      BL       CSNR_GetData
    168          
    169                          if(praflg == 0)
   \   00000054   0x....             LDR.N    R0,??DataTable4_11
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD126             BNE.N    ??IAP_PragramTask_3
    170                          {
    171                              databuf[datalen] = '\0';
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x....             LDR.N    R1,??DataTable4_10
   \   00000060   0x9A00             LDR      R2,[SP, #+0]
   \   00000062   0x5450             STRB     R0,[R2, R1]
    172                              
    173                              if(strcmp((char *)&databuf[0],startstring) == 0)				//±à3ì?D?¨
   \   00000064   0x....             LDR.N    R1,??DataTable4_12
   \   00000066   0x....             LDR.N    R0,??DataTable4_10
   \   00000068   0x.... 0x....      BL       strcmp
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD167             BNE.N    ??IAP_PragramTask_1
    174                              {
    175                                  lstrecnum = GetRecFramNum();
   \   00000070   0x.... 0x....      BL       GetRecFramNum
   \   00000074   0x....             LDR.N    R1,??DataTable4_13
   \   00000076   0x7008             STRB     R0,[R1, #+0]
    176                                  SetFramNum(lstrecnum);
   \   00000078   0x....             LDR.N    R0,??DataTable4_13
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x.... 0x....      BL       SetFramNum
    177          
    178                                  praflg = 1;
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x....             LDR.N    R1,??DataTable4_11
   \   00000084   0x7008             STRB     R0,[R1, #+0]
    179                                  DataSend_CSNR(0x80,0xA1,(uint8 *)startstring,strlen(startstring));	   
   \   00000086   0x....             LDR.N    R0,??DataTable4_12
   \   00000088   0x.... 0x....      BL       strlen
   \   0000008C   0x0003             MOVS     R3,R0
   \   0000008E   0x....             LDR.N    R2,??DataTable4_12
   \   00000090   0x21A1             MOVS     R1,#+161
   \   00000092   0x2080             MOVS     R0,#+128
   \   00000094   0x.... 0x....      BL       DataSend_CSNR
    180                              
    181                                  printfcom1(" s:%s\r\n",startstring);
   \   00000098   0x....             LDR.N    R1,??DataTable4_12
   \   0000009A   0x....             LDR.N    R0,??DataTable4_14
   \   0000009C   0x.... 0x....      BL       printfcom1
    182                                  time = GetSysTime();							
   \   000000A0   0x.... 0x....      BL       GetSysTime
   \   000000A4   0x....             LDR.N    R1,??DataTable4_7
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    183                                  continue ;
   \   000000A8   0xE7BA             B.N      ??IAP_PragramTask_0
    184                                  //return;
    185                              }
    186                          } 
    187                          else																					
    188                          {
    189                              printfcom1("\r\n lstrecnum %x,%x",lstrecnum, GetFramNum());
   \                     ??IAP_PragramTask_3: (+1)
   \   000000AA   0x.... 0x....      BL       GetFramNum
   \   000000AE   0x0002             MOVS     R2,R0
   \   000000B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B2   0x....             LDR.N    R0,??DataTable4_13
   \   000000B4   0x7801             LDRB     R1,[R0, #+0]
   \   000000B6   0x....             LDR.N    R0,??DataTable4_15
   \   000000B8   0x.... 0x....      BL       printfcom1
    190                              if(lstrecnum == GetRecFramNum())
   \   000000BC   0x.... 0x....      BL       GetRecFramNum
   \   000000C0   0x....             LDR.N    R1,??DataTable4_13
   \   000000C2   0x7809             LDRB     R1,[R1, #+0]
   \   000000C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C6   0x4281             CMP      R1,R0
   \   000000C8   0xD10D             BNE.N    ??IAP_PragramTask_4
    191                              {
    192                                  DataSend_CSNR(0x80,0xA1,holdstring,strlen(holdstring));	
   \   000000CA   0x....             LDR.N    R0,??DataTable4_16
   \   000000CC   0x.... 0x....      BL       strlen
   \   000000D0   0x0003             MOVS     R3,R0
   \   000000D2   0x....             LDR.N    R2,??DataTable4_16
   \   000000D4   0x21A1             MOVS     R1,#+161
   \   000000D6   0x2080             MOVS     R0,#+128
   \   000000D8   0x.... 0x....      BL       DataSend_CSNR
    193                                  time = GetSysTime();
   \   000000DC   0x.... 0x....      BL       GetSysTime
   \   000000E0   0x....             LDR.N    R1,??DataTable4_7
   \   000000E2   0x6008             STR      R0,[R1, #+0]
   \   000000E4   0xE02C             B.N      ??IAP_PragramTask_1
    194                              }
    195                              else
    196                              {	
    197                                  lstrecnum = GetRecFramNum();
   \                     ??IAP_PragramTask_4: (+1)
   \   000000E6   0x.... 0x....      BL       GetRecFramNum
   \   000000EA   0x....             LDR.N    R1,??DataTable4_13
   \   000000EC   0x7008             STRB     R0,[R1, #+0]
    198                                  SetFramNum(lstrecnum);
   \   000000EE   0x....             LDR.N    R0,??DataTable4_13
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x.... 0x....      BL       SetFramNum
    199          
    200                                  IAP_pragramDeal(databuf,datalen);					//±à3ì						   	
   \   000000F6   0x9900             LDR      R1,[SP, #+0]
   \   000000F8   0x....             LDR.N    R0,??DataTable4_10
   \   000000FA   0x.... 0x....      BL       IAP_pragramDeal
    201          #ifdef CVI													
    202                                  databuf[datalen] = '\0';
    203                                  printfcom1texbox(databuf);
    204          #endif				
    205                                  DataSend_CSNR(0x80,0xA1,pramstring,strlen(pramstring));	 
   \   000000FE   0x....             LDR.N    R0,??DataTable4_17
   \   00000100   0x.... 0x....      BL       strlen
   \   00000104   0x0003             MOVS     R3,R0
   \   00000106   0x....             LDR.N    R2,??DataTable4_17
   \   00000108   0x21A1             MOVS     R1,#+161
   \   0000010A   0x2080             MOVS     R0,#+128
   \   0000010C   0x.... 0x....      BL       DataSend_CSNR
    206                                  printfcom1("%s",pramstring);
   \   00000110   0x....             LDR.N    R1,??DataTable4_17
   \   00000112   0x....             ADR.N    R0,??DataTable4_1  ;; 0x25, 0x73, 0x00, 0x00
   \   00000114   0x.... 0x....      BL       printfcom1
    207                                  
    208                                  if(datalen != 128)												//?áê?±à3ì
   \   00000118   0x9800             LDR      R0,[SP, #+0]
   \   0000011A   0x2880             CMP      R0,#+128
   \   0000011C   0xD00C             BEQ.N    ??IAP_PragramTask_5
    209                                  {	
    210                                      DataSend_CSNR(0x80,0xA1,endstring,strlen(endstring));	
   \   0000011E   0x....             LDR.N    R0,??DataTable4_18
   \   00000120   0x.... 0x....      BL       strlen
   \   00000124   0x0003             MOVS     R3,R0
   \   00000126   0x....             LDR.N    R2,??DataTable4_18
   \   00000128   0x21A1             MOVS     R1,#+161
   \   0000012A   0x2080             MOVS     R0,#+128
   \   0000012C   0x.... 0x....      BL       DataSend_CSNR
    211                                      printfcom1("\r\n len != 128");
   \   00000130   0x....             LDR.N    R0,??DataTable4_19
   \   00000132   0x.... 0x....      BL       printfcom1
    212                                      break;
   \   00000136   0xE033             B.N      ??IAP_PragramTask_6
    213                                  }
    214          
    215                                  time = GetSysTime();
   \                     ??IAP_PragramTask_5: (+1)
   \   00000138   0x.... 0x....      BL       GetSysTime
   \   0000013C   0x....             LDR.N    R1,??DataTable4_7
   \   0000013E   0x6008             STR      R0,[R1, #+0]
    216                              }
    217                          }
    218                      }
    219                      
    220                      if(praflg == 0)
   \                     ??IAP_PragramTask_1: (+1)
   \   00000140   0x....             LDR.N    R0,??DataTable4_11
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD11E             BNE.N    ??IAP_PragramTask_7
    221                      {
    222                          if(comflg == 0)
   \   00000148   0x....             LDR.N    R0,??DataTable4_9
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x2800             CMP      R0,#+0
   \   0000014E   0xD10C             BNE.N    ??IAP_PragramTask_8
    223                          {
    224                              if(GetSysTime() - time > 1000)										//í?3?
   \   00000150   0x.... 0x....      BL       GetSysTime
   \   00000154   0x....             LDR.N    R1,??DataTable4_7
   \   00000156   0x6809             LDR      R1,[R1, #+0]
   \   00000158   0x1A40             SUBS     R0,R0,R1
   \   0000015A   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000015E   0xF67F 0xAF5F      BLS.W    ??IAP_PragramTask_0
    225                              {
    226                                  printfcom1("\r\nGetSysTime() - time > 1000");
   \   00000162   0x....             LDR.N    R0,??DataTable4_20
   \   00000164   0x.... 0x....      BL       printfcom1
    227                                  break;
   \   00000168   0xE01A             B.N      ??IAP_PragramTask_6
    228                              }
    229                          }
    230                          else
    231                          {
    232                              if(GetSysTime() - time > 1500)										//í?3?
   \                     ??IAP_PragramTask_8: (+1)
   \   0000016A   0x.... 0x....      BL       GetSysTime
   \   0000016E   0x....             LDR.N    R1,??DataTable4_7
   \   00000170   0x6809             LDR      R1,[R1, #+0]
   \   00000172   0x1A40             SUBS     R0,R0,R1
   \   00000174   0xF240 0x51DD      MOVW     R1,#+1501
   \   00000178   0x4288             CMP      R0,R1
   \   0000017A   0xF4FF 0xAF51      BCC.W    ??IAP_PragramTask_0
    233                              {
    234                                  printfcom1("\r\nGetSysTime() - time > 1000");
   \   0000017E   0x....             LDR.N    R0,??DataTable4_20
   \   00000180   0x.... 0x....      BL       printfcom1
    235                                  break;
   \   00000184   0xE00C             B.N      ??IAP_PragramTask_6
    236                              }
    237                          }
    238                      }
    239                      else
    240                      {
    241                          if(GetSysTime() - time > 2500)										//í?3?
   \                     ??IAP_PragramTask_7: (+1)
   \   00000186   0x.... 0x....      BL       GetSysTime
   \   0000018A   0x....             LDR.N    R1,??DataTable4_7
   \   0000018C   0x6809             LDR      R1,[R1, #+0]
   \   0000018E   0x1A40             SUBS     R0,R0,R1
   \   00000190   0xF640 0x11C5      MOVW     R1,#+2501
   \   00000194   0x4288             CMP      R0,R1
   \   00000196   0xF4FF 0xAF43      BCC.W    ??IAP_PragramTask_0
    242                          {
    243                              printfcom1("\r\nGetSysTime() - time > 2500");
   \   0000019A   0x....             LDR.N    R0,??DataTable4_21
   \   0000019C   0x.... 0x....      BL       printfcom1
    244                              break;
    245                          }
    246                      }
    247          		}	
    248          		
    249          //		p =  (uint8 *)USER_APP_START_ADDR;
    250          //		for(i = 0;i < 0x20000;i++ )
    251          //		{
    252          //			printfcom1("%02x",*p);
    253          //			p++;
    254          //		}
    255          
    256                  //20170812 D???±?・Y????±′1|?ü?￡
    257                  
    258                  IAP_ProgramCopy();
   \                     ??IAP_PragramTask_6: (+1)
   \   000001A0   0x.... 0x....      BL       IAP_ProgramCopy
    259                  
    260          		printfcom1("\r\nboot end\r\n");
   \   000001A4   0x....             LDR.N    R0,??DataTable4_22
   \   000001A6   0x.... 0x....      BL       printfcom1
    261                  
    262                  iwdg_init();
   \   000001AA   0x.... 0x....      BL       iwdg_init
    263                  FeedDog();
   \   000001AE   0x.... 0x....      BL       FeedDog
    264          		//Boot();
    265                  Jumpto_APP();
   \   000001B2   0x.... 0x....      BL       Jumpto_APP
    266          }
   \   000001B6   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??time:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??praflg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??comflg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??lstrecnum:
   \   00000000                      DS8 1
    267          
    268          typedef  struct   _stcIAPPara_
    269          {
    270              uint16  hardver;        //????
    271              uint16  softver;        //????
    272              uint32  softsize;       //????
    273              uint32  addr;           //????
    274              uint32  framenum;       //???
    275              uint16  code;           //??? 01,????????
    276              uint16  crc16;
    277          }stcIAPPara;
    278          
    279          /*******************************************************************************
    280           * ?    ?: IAP_WriteParaFlash
    281           * ?    ?: ?IAP??????Flash?
    282           * ????: stcIAPCtrl
    283           * ????: ?
    284           * ?  ?: redmorningcn.
    285           * ????: 2017-08-08
    286           * ?    ?:
    287           * ????:
    288           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    289          void    IAP_ReadParaFlash(stcIAPPara *sIAPPara)
    290          {
   \                     IAP_ReadParaFlash: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    291              CPU_SR_ALLOC();
   \   00000004   0x2500             MOVS     R5,#+0
    292          
    293              uint32_t result[4];
    294              
    295              zyIrqDisable();                                 //???
   \   00000006   0x.... 0x....      BL       CPU_SR_Save
   \   0000000A   0x0005             MOVS     R5,R0
    296              
    297              memcpy((uint8 *)sIAPPara,(uint8 *)IAP_PARA_START_ADDR,sizeof(stcIAPPara));
   \   0000000C   0x2614             MOVS     R6,#+20
   \   0000000E   0x....             LDR.N    R7,??DataTable4_23  ;; 0x8030000
   \   00000010   0x0032             MOVS     R2,R6
   \   00000012   0x0039             MOVS     R1,R7
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       __aeabi_memcpy
    298                      
    299              zyIrqEnable();                                  //?????
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x.... 0x....      BL       CPU_SR_Restore
    300          }
   \   00000020   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    301          
    302          
    303          /*******************************************************************************
    304           * ?    ?: IAP_WriteParaFlash
    305           * ?    ?: ?IAP??????Flash?
    306           * ????: stcIAPCtrl
    307           * ????: ?
    308           * ?  ?: redmorningcn.
    309           * ????: 2017-08-08
    310           * ?    ?:
    311           * ????:
    312           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    313          void    IAP_WriteParaFlash(stcIAPPara *sIAPPara)
    314          {
   \                     IAP_WriteParaFlash: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    315              CPU_SR_ALLOC();
   \   00000004   0x2500             MOVS     R5,#+0
    316          
    317              //IAP_STATUS_CODE status;
    318              uint32_t result[4];
    319          
    320          //    uint32_t flash_prog_area_sec_start;
    321          //    uint32_t flash_prog_area_sec_end;
    322              
    323              zyIrqDisable();										                                //???
   \   00000006   0x.... 0x....      BL       CPU_SR_Save
   \   0000000A   0x0005             MOVS     R5,R0
    324          
    325          //    flash_prog_area_sec_start   = 	GetSecNum(IAP_PARA_START_ADDR);
    326          //    flash_prog_area_sec_end 	=  	GetSecNum(IAP_PARA_START_ADDR + IAP_PARA_PRO_SIZE); //????
    327          //
    328          //    status = EraseSector(flash_prog_area_sec_start, flash_prog_area_sec_end);           //??????
    329          //    status = BlankCheckSector(flash_prog_area_sec_start, flash_prog_area_sec_end,
    330          //                &result[0], &result[1]);
    331              
    332               iap_write_appbin(     IAP_PARA_START_ADDR,
    333                                      (uint8 *)sIAPPara,
    334                                      256
    335                                      );           
   \   0000000C   0xF44F 0x7280      MOV      R2,#+256
   \   00000010   0x0021             MOVS     R1,R4
   \   00000012   0x....             LDR.N    R0,??DataTable4_23  ;; 0x8030000
   \   00000014   0x.... 0x....      BL       iap_write_appbin
    336              //??flash??,??????
    337          //    status 	= CopyRAM2Flash( (uint8_t *)IAP_PARA_START_ADDR,
    338          //                                  (uint8 *)sIAPPara,
    339          //                                   256
    340          //                            );                                                          //????
    341          //    
    342          //    status =  Compare((uint8_t *)IAP_PARA_START_ADDR,
    343          //                            (uint8 *)sIAPPara,
    344          //                            sizeof(stcIAPPara)
    345          //                    );                                                                  //????
    346                      
    347              zyIrqEnable();                                                                      //?flash???,?????
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       CPU_SR_Restore
    348          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    349          

   \                                 In section .bss, align 4
    350          uint8 buf[1024];
   \                     buf:
   \   00000000                      DS8 1024
    351          /*******************************************************************************
    352           * ?    ?: IAP_WriteFlash
    353           * ?    ?: ?????Flash?
    354           * ????: stcIAPCtrl
    355           * ????: ?
    356           * ?  ?: redmorningcn.
    357           * ????: 2017-08-08
    358           * ?    ?:
    359           * ????:
    360           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    361          void    IAP_CopyAppToFlash(stcIAPPara *sIAPPara)
    362          {
   \                     IAP_CopyAppToFlash: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
    363              //IAP_STATUS_CODE status;
    364              CPU_SR_ALLOC();
   \   00000006   0x2500             MOVS     R5,#+0
    365              uint32_t result[4];
    366              //?áè?flashêy?Y
    367              uint32_t finshlen = 0;
   \   00000008   0x2600             MOVS     R6,#+0
    368              int i;
    369              
    370              uint32_t flash_prog_area_sec_start;
    371              uint32_t flash_prog_area_sec_end;
    372          
    373              zyIrqDisable();										//???
   \   0000000A   0x.... 0x....      BL       CPU_SR_Save
   \   0000000E   0x0005             MOVS     R5,R0
    374              
    375              //2?3y??òaD′μ???óò
    376          //    flash_prog_area_sec_start   = 	GetSecNum(USER_APP_START_ADDR);
    377          //    flash_prog_area_sec_end 	=  	GetSecNum(USER_APP_START_ADDR + USER_APP_PRO_SIZE);//????
    378          //
    379          //    status = EraseSector(flash_prog_area_sec_start, flash_prog_area_sec_end);           //???????
    380          //
    381          //    status = BlankCheckSector(flash_prog_area_sec_start, flash_prog_area_sec_end,
    382          //                  &result[0], &result[1]);
    383          
    384              finshlen = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x0006             MOVS     R6,R0
    385              //μ??・?????òò?μ?êy?Y??3¤?è￡?í?3?
    386              while(  finshlen < USER_APP_PRO_SIZE 
    387                  &&  finshlen < sIAPPara->softsize )
   \                     ??IAP_CopyAppToFlash_0: (+1)
   \   00000014   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000018   0x4286             CMP      R6,R0
   \   0000001A   0xD21A             BCS.N    ??IAP_CopyAppToFlash_1
   \   0000001C   0x6860             LDR      R0,[R4, #+4]
   \   0000001E   0x4286             CMP      R6,R0
   \   00000020   0xD217             BCS.N    ??IAP_CopyAppToFlash_1
    388              
    389              {
    390                  memcpy(buf,(uint8 *)(USER_BACK_START_ADDR + finshlen),IAP_WRITE_1024);   //è?backup????êy?Y
   \   00000022   0xF44F 0x6780      MOV      R7,#+1024
   \   00000026   0x....             LDR.N    R0,??DataTable4_24  ;; 0x8020000
   \   00000028   0xEB10 0x0806      ADDS     R8,R0,R6
   \   0000002C   0x.... 0x....      LDR.W    R9,??DataTable4_25
   \   00000030   0x003A             MOVS     R2,R7
   \   00000032   0x4641             MOV      R1,R8
   \   00000034   0x4648             MOV      R0,R9
   \   00000036   0x.... 0x....      BL       __aeabi_memcpy
    391                  
    392          //        status 	= CopyRAM2Flash((uint8 *)(USER_APP_START_ADDR + finshlen),       //??backup??êy?YD′è?app??   
    393          //                                         buf,
    394          //                                         IAP_WRITE_1024
    395          //                                );                      
    396                  iap_write_appbin((USER_APP_START_ADDR + finshlen),       //??backup??êy?YD′è?app??   
    397                                                   buf,
    398                                                   IAP_WRITE_1024);
   \   0000003A   0xF44F 0x6280      MOV      R2,#+1024
   \   0000003E   0x....             LDR.N    R1,??DataTable4_25
   \   00000040   0x....             LDR.N    R0,??DataTable4_26  ;; 0x8010000
   \   00000042   0x1980             ADDS     R0,R0,R6
   \   00000044   0x.... 0x....      BL       iap_write_appbin
    399          //        status =  Compare((uint8 *)(USER_APP_START_ADDR + finshlen),             //±è??D′è??úèY     
    400          //                                     buf,
    401          //                                     IAP_WRITE_1024
    402          //                                );
    403                  
    404                  finshlen += IAP_WRITE_1024;                     //μ??・à??ó  
   \   00000048   0xF516 0x6680      ADDS     R6,R6,#+1024
    405                  
    406                  //for(i = 0; i< IAP_WRITE_1024;i++)
    407                  {
    408                  //    printfcom1("%02x",buf[i]);
    409                  }
    410                  FeedDog();
   \   0000004C   0x.... 0x....      BL       FeedDog
   \   00000050   0xE7E0             B.N      ??IAP_CopyAppToFlash_0
    411              }   
    412              
    413              zyIrqEnable();                                  //?flash???,?????   0731-22689503   6246  7405
   \                     ??IAP_CopyAppToFlash_1: (+1)
   \   00000052   0x0028             MOVS     R0,R5
   \   00000054   0x.... 0x....      BL       CPU_SR_Restore
    414          }
   \   00000058   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    415          #define     IAP_COPY_BACK_APP    0x01
    416          uint16 GetCrc16Check(uint8 *Buf, uint16 Len);
    417          /*******************************************************************************
    418           * ?    ?: IAP_WriteFlash
    419           * ?    ?: ?????Flash?
    420           * ????: stcIAPCtrl
    421           * ????: ?
    422           * ?  ?: redmorningcn.
    423           * ????: 2017-08-08
    424           * ?    ?:
    425           * ????:
    426           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    427          void    IAP_ProgramCopy(void)
    428          {
   \                     IAP_ProgramCopy: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    429              uint16  crc16;
    430              
    431              stcIAPPara  sIapPara;
    432                  
    433              IAP_ReadParaFlash(&sIapPara);                          //?áIAP2?êy
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x.... 0x....      BL       IAP_ReadParaFlash
    434              
    435              crc16 = GetCrc16Check((uint8 *)&sIapPara,sizeof(stcIAPPara)-2);  //??D￡?é
   \   0000000A   0x2112             MOVS     R1,#+18
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x.... 0x....      BL       GetCrc16Check
   \   00000012   0x0004             MOVS     R4,R0
    436              
    437              FeedDog();
   \   00000014   0x.... 0x....      BL       FeedDog
    438          
    439              if( crc16 == sIapPara.crc16 &&                          //D￡?é?yè・￡??òcopy??á?￡??ò?′DDcopy2ù×÷,
    440                  sIapPara.code == IAP_COPY_BACK_APP &&               //êy?Y?? êy?Y′óD? ê?・?óDD§
    441                  sIapPara.softsize > 0x100 &&
    442                  sIapPara.softsize < USER_APP_PRO_SIZE
    443                )
   \   00000018   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   0000001C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001E   0x4284             CMP      R4,R0
   \   00000020   0xD11C             BNE.N    ??IAP_ProgramCopy_0
   \   00000022   0xF8BD 0x0010      LDRH     R0,[SP, #+16]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD118             BNE.N    ??IAP_ProgramCopy_0
   \   0000002A   0x9801             LDR      R0,[SP, #+4]
   \   0000002C   0xF5B0 0x7F80      CMP      R0,#+256
   \   00000030   0xD914             BLS.N    ??IAP_ProgramCopy_0
   \   00000032   0x9801             LDR      R0,[SP, #+4]
   \   00000034   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000038   0x4288             CMP      R0,R1
   \   0000003A   0xD20F             BCS.N    ??IAP_ProgramCopy_0
    444              {
    445                  // printfcom1("\r\n???ˉ?ó??.....\r\n");
    446          
    447                  IAP_CopyAppToFlash(&sIapPara);                      //êy?Y′óback??copy?áapp??
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x.... 0x....      BL       IAP_CopyAppToFlash
    448          
    449                  sIapPara.code   = 0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0xF8AD 0x0010      STRH     R0,[SP, #+16]
    450                  crc16 = GetCrc16Check((uint8 *)&sIapPara,sizeof(stcIAPPara)-2);  //????D￡?é
   \   00000048   0x2112             MOVS     R1,#+18
   \   0000004A   0x4668             MOV      R0,SP
   \   0000004C   0x.... 0x....      BL       GetCrc16Check
   \   00000050   0x0004             MOVS     R4,R0
    451                  sIapPara.crc16  = crc16;             
   \   00000052   0xF8AD 0x4012      STRH     R4,[SP, #+18]
    452                  //DT??copy??á?￡???D?D′è?
    453                  IAP_WriteParaFlash(&sIapPara);
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x.... 0x....      BL       IAP_WriteParaFlash
    454              
    455              }
    456          }
   \                     ??IAP_ProgramCopy_0: (+1)
   \   0000005C   0xB006             ADD      SP,SP,#+24
   \   0000005E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     ??times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ??iapbuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     ??iapbuflen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     ??curaddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     ??time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     recbuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     ??comflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     databuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     ??praflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     startstring

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     ??lstrecnum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     holdstring

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     pramstring

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     endstring

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x08030000         DC32     0x8030000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x08020000         DC32     0x8020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x08010000         DC32     0x8010000

   \                                 In section .rodata, align 4
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0D 0x0A          DC8 "\015\012boot start stm32 V1.01"
   \              0x62 0x6F    
   \              0x6F 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x20 0x73    
   \              0x74 0x6D    
   \              0x33 0x32    
   \              0x20 0x56    
   \              0x31 0x2E    
   \              0x30 0x31    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x20 0x73          DC8 " s:%s\015\012"
   \              0x3A 0x25    
   \              0x73 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x0D 0x0A          DC8 "\015\012 lstrecnum %x,%x"
   \              0x20 0x6C    
   \              0x73 0x74    
   \              0x72 0x65    
   \              0x63 0x6E    
   \              0x75 0x6D    
   \              0x20 0x25    
   \              0x78 0x2C    
   \              0x25 0x78    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x73          DC8 "%s"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0D 0x0A          DC8 "\015\012 len != 128"
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x20 0x21    
   \              0x3D 0x20    
   \              0x31 0x32    
   \              0x38 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x0D 0x0A          DC8 "\015\012GetSysTime() - time > 1000"
   \              0x47 0x65    
   \              0x74 0x53    
   \              0x79 0x73    
   \              0x54 0x69    
   \              0x6D 0x65    
   \              0x28 0x29    
   \              0x20 0x2D    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x20    
   \              0x3E 0x20    
   \              0x31 0x30    
   \              0x30 0x30    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x0D 0x0A          DC8 "\015\012GetSysTime() - time > 2500"
   \              0x47 0x65    
   \              0x74 0x53    
   \              0x79 0x73    
   \              0x54 0x69    
   \              0x6D 0x65    
   \              0x28 0x29    
   \              0x20 0x2D    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x20    
   \              0x3E 0x20    
   \              0x32 0x35    
   \              0x30 0x30    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 "\015\012boot end\015\012"
   \              0x62 0x6F    
   \              0x6F 0x74    
   \              0x20 0x65    
   \              0x6E 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DelayX10ms
        16   -> FeedDog
        16   -> GetSysTime
       8   FeedDog
         8   -> IWDG_ReloadCounter
       8   GetSysTime
         8   -> GetSysBaseTick
      32   IAP_CopyAppToFlash
        32   -> CPU_SR_Restore
        32   -> CPU_SR_Save
        32   -> FeedDog
        32   -> __aeabi_memcpy
        32   -> iap_write_appbin
      16   IAP_PragramTask
        16   -> CSNR_GetData
        16   -> DataSend_CSNR
        16   -> DelayX10ms
        16   -> FeedDog
        16   -> GetFramNum
        16   -> GetRecFramNum
        16   -> GetSysTime
        16   -> HoldUartRecSta
        16   -> IAP_ProgramCopy
        16   -> IAP_pragramDeal
        16   -> Jumpto_APP
        16   -> ReadUartBuf
        16   -> SetFramNum
        16   -> iwdg_init
        16   -> printfcom1
        16   -> strcmp
        16   -> strlen
      32   IAP_ProgramCopy
        32   -> FeedDog
        32   -> GetCrc16Check
        32   -> IAP_CopyAppToFlash
        32   -> IAP_ReadParaFlash
        32   -> IAP_WriteParaFlash
      24   IAP_ReadParaFlash
        24   -> CPU_SR_Restore
        24   -> CPU_SR_Save
        24   -> __aeabi_memcpy
      16   IAP_WriteParaFlash
        16   -> CPU_SR_Restore
        16   -> CPU_SR_Save
        16   -> iap_write_appbin
      24   IAP_pragramDeal
        24   -> CPU_SR_Restore
        24   -> CPU_SR_Save
        24   -> __aeabi_memcpy
        24   -> iap_write_appbin
       8   iwdg_init
         8   -> IWDG_Enable
         8   -> IWDG_SetPrescaler
         8   -> IWDG_SetReload
         8   -> IWDG_WriteAccessCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ?_0
      28  ?_1
       8  ?_2
      20  ?_3
       4  ?_4
      16  ?_5
      32  ?_6
      32  ?_7
      16  ?_8
      40  DelayX10ms
       8  FeedDog
      12  GetSysTime
      92  IAP_CopyAppToFlash
     440  IAP_PragramTask
      96  IAP_ProgramCopy
      34  IAP_ReadParaFlash
      32  IAP_WriteParaFlash
     134  IAP_pragramDeal
    1024  buf
       1  comflg
       4  curaddr
     256  databuf
      20  endstring
       2  holdstring
    2048  iapbuf
       4  iapbuflen
      30  iwdg_init
       1  lstrecnum
       1  praflg
       2  pramstring
     256  recbuf
      20  startstring
       4  time
       1  times

 
 3 596 bytes in section .bss
    48 bytes in section .data
   160 bytes in section .rodata
 1 026 bytes in section .text
 
 1 026 bytes of CODE  memory
   160 bytes of CONST memory
 3 644 bytes of DATA  memory

Errors: none
Warnings: 10
